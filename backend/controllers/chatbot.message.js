import Bot from "../models/bot.model.js";
import User from "../models/user.model.js";

export const Message=async(req,res)=>{
   try {
    const {text}=req.body;
 
    if(!text?.trim()){
        return res.status(400).json({error:"Text cannot be empty"});
    }

    const user=await User.create({
        sender:"user",
        text
    })

    // Data
// Developer-focused bot responses
const botResponses = {
  "hello": "Hey there! üëã I‚Äôm DevBot, your coding assistant. How can I help you today?",
  "how are you": "I‚Äôm fully operational and ready to debug your problems! üòé",
  "what is javascript": "JavaScript is a versatile, high-level programming language primarily used for web development.\n‚Ä¢ Runs in browsers and servers (Node.js)\n‚Ä¢ Supports functional, event-driven, and object-oriented programming\n‚Ä¢ Libraries/Frameworks: React, Angular, Vue\n‚Ä¢ Example: Used to make dynamic web pages, handle events, and API calls.",
  "what is python": "Python is a high-level, interpreted language great for web development, automation, and data science.\n‚Ä¢ Easy-to-read syntax, dynamically typed\n‚Ä¢ Popular frameworks: Django, Flask\n‚Ä¢ Libraries: Pandas, NumPy, TensorFlow, PyTorch\n‚Ä¢ Example: AI/ML models, web apps, scripting, data analysis.",
  "what is react": "React is a JavaScript library for building user interfaces, maintained by Facebook.\n‚Ä¢ Component-based architecture\n‚Ä¢ Virtual DOM improves performance\n‚Ä¢ Popular for single-page applications (SPAs)\n‚Ä¢ Example: Facebook, Instagram, and Netflix UIs use React.",
  "what is node.js": "Node.js is a JavaScript runtime built on Chrome's V8 engine.\n‚Ä¢ Enables server-side JS execution\n‚Ä¢ Event-driven, non-blocking I/O for scalable applications\n‚Ä¢ Popular frameworks: Express.js, Nest.js\n‚Ä¢ Example: APIs, web servers, real-time apps like chat apps.",
  "what is typescript": "TypeScript is a superset of JavaScript adding static types.\n‚Ä¢ Helps catch errors during development\n‚Ä¢ Improves maintainability and scalability\n‚Ä¢ Compiles to plain JavaScript\n‚Ä¢ Example: Angular projects, large-scale JS applications.",
  "what is git": "Git is a distributed version control system.\n‚Ä¢ Tracks changes in code\n‚Ä¢ Enables collaboration among developers\n‚Ä¢ Commands: git clone, git commit, git push, git pull\n‚Ä¢ Example: GitHub and GitLab use Git for version control.",
  "what is github": "GitHub is a platform for hosting Git repositories.\n‚Ä¢ Supports collaboration, code reviews, issue tracking\n‚Ä¢ Offers CI/CD via GitHub Actions\n‚Ä¢ Example: Hosting open-source projects, managing private repos.",
  "what is docker": "Docker is a containerization platform.\n‚Ä¢ Packages applications with dependencies into containers\n‚Ä¢ Ensures consistent environments across machines\n‚Ä¢ Example: Microservices, deployment pipelines.",
  "what is kubernetes": "Kubernetes is an orchestration system for containerized applications.\n‚Ä¢ Manages scaling, deployment, and networking of containers\n‚Ä¢ Works with Docker and other container runtimes\n‚Ä¢ Example: Running large-scale microservices in production.",
  "what is api": "An API (Application Programming Interface) allows software to communicate with other software.\n‚Ä¢ Types: REST, GraphQL, SOAP\n‚Ä¢ Example: Fetching weather data from OpenWeatherMap API in your app.",
  "what is rest api": "REST API is an API adhering to REST principles.\n‚Ä¢ Stateless communication over HTTP\n‚Ä¢ Uses standard methods: GET, POST, PUT, DELETE\n‚Ä¢ Example: CRUD operations in web applications.",
  "what is sql": "SQL (Structured Query Language) is used to manage relational databases.\n‚Ä¢ Commands: SELECT, INSERT, UPDATE, DELETE\n‚Ä¢ Example: MySQL, PostgreSQL, SQLite databases.",
  "what is nosql": "NoSQL databases store non-relational data.\n‚Ä¢ Types: Document, Key-Value, Column, Graph\n‚Ä¢ Examples: MongoDB (Document), Redis (Key-Value).",
  "what is css": "CSS (Cascading Style Sheets) is used to style HTML content.\n‚Ä¢ Handles layout, colors, fonts, and animations\n‚Ä¢ Example: Styling websites, creating responsive layouts.",
  "what is html": "HTML (HyperText Markup Language) structures web content.\n‚Ä¢ Uses tags like <div>, <h1>, <p>\n‚Ä¢ Forms the skeleton of web pages.",
  "what is webpack": "Webpack is a module bundler for JavaScript applications.\n‚Ä¢ Bundles JS, CSS, images, and assets\n‚Ä¢ Supports code splitting and hot module replacement\n‚Ä¢ Example: Optimizing React or Vue applications.",
  "what is npm": "NPM (Node Package Manager) manages Node.js packages.\n‚Ä¢ Install packages: npm install <package>\n‚Ä¢ Useful for dependency management in JS projects.",
  "what is yarn": "Yarn is an alternative to NPM for managing JS dependencies.\n‚Ä¢ Faster installs, deterministic versions\n‚Ä¢ Example: npm install vs yarn add.",
  "what is api testing": "API testing validates APIs to ensure they work as expected.\n‚Ä¢ Tools: Postman, Insomnia, REST-assured\n‚Ä¢ Example: Test CRUD operations of your REST API.",
  "what is ci cd": "CI/CD (Continuous Integration / Continuous Deployment)\n‚Ä¢ Automates testing and deployment\n‚Ä¢ Tools: Jenkins, GitHub Actions, GitLab CI/CD\n‚Ä¢ Example: Automatically deploy code after passing tests.",
  "tell me a joke": "Why do programmers prefer dark mode? Because light attracts bugs! üêõ",
  "bye": "Goodbye! Keep coding and stay awesome! üöÄ",
  "thank you": "You're welcome! Happy coding! üíª",
}


const normalizedText = text.toLowerCase().trim();

const botResponse = botResponses[normalizedText] || "Sorry, I don't understand that!!!";

const bot = await Bot.create({
    text: botResponse
})

return res.status(200).json({
    userMessage:user.text,
    botMessage:bot.text,
})
   } catch (error) {
    console.log("Error in Message Controller:", error);
    return res.status(500).json({error:"Internal Server Error"});
   }
}